<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@interface SZBlog : NSBlog]]></title>
  <link href="http://zongxuan.us/atom.xml" rel="self"/>
  <link href="http://zongxuan.us/"/>
  <updated>2014-11-20T17:53:19+08:00</updated>
  <id>http://zongxuan.us/</id>
  <author>
    <name><![CDATA[szx]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[小百合iOS客户端主题制作教程]]></title>
    <link href="http://zongxuan.us/blog/2014/07/19/how-to-make-theme-for-lilybbs-ios-client/"/>
    <updated>2014-07-19T10:03:21+08:00</updated>
    <id>http://zongxuan.us/blog/2014/07/19/how-to-make-theme-for-lilybbs-ios-client</id>
    <content type="html"><![CDATA[<p>昨晚更新的 3.0.1 版本开始支持第三方主题。</p>

<p>之前的 3.0.0 版本也能够识别第三方主题，但有部分选项可能支持不佳。</p>

<p>示例主题包可以在 <a href="http://zongxuan.us/attachments/us.zongxuan.Blue.zip">这里</a> 下载</p>

<p>主题制作仿照示例主题包即可，主要内容在于图片文件的准备和包内 info.plist 的配置。</p>

<h3>1. 图片资源准备</h3>

<p>图片资源文件请使用 png 文件，jpg 文件在 iOS 上性能不佳，而且不能实现透明，如果你使用 jpg，所有图标都可能会变成大方块哦~</p>

<p>图片大小请参照实例主题包内的图片大小，稍微相差一点也是没问题的，但最好是偶数像素大小。</p>

<p>图片文件名的格式为 &lt;文件名>&lt;@2x>，同示例主题包。</p>

<p>图片文件 <em>可以</em> 用 ImageOptim 等软件适当优化，有利于提高那么些许的性能。不过不优化也是没什么问题的。</p>

<p>图片基本上就这样了。</p>

<h3>2. info.plist 文件配置</h3>

<p>info.plist 是主题的配置文件，是一个标准的 XML 文件，Windows 平台上可使用 UltraEdit 等软件打开，请注意打开时会提示是否转换到 Windows 标准的换行符，最好不要转换。</p>

<p>在 Mac 上可以直接用 Xcode 改。</p>

<p>打开来可以看到文件基本上是这样的：</p>

<p><img src="http://zongxuan.us/images/post/2014-07-19-how-to-make-theme-for-lilybbs-ios-client/1.png" alt="" /></p>

<p>配置好每一项就 OK 了。</p>

<p>info.plist 文件内的字段共有三种类型。</p>

<table>
<thead>
<tr>
<th></th>
<th>字段类型         </th>
<th>含义           </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>图片            </td>
<td>请使用图片文件 @2x 之前的部分</td>
</tr>
<tr>
<td></td>
<td>颜色            </td>
<td>使用 Web 标准的 16进制颜色</td>
</tr>
<tr>
<td></td>
<td>布尔值          </td>
<td>配置为 true 或 false</td>
</tr>
<tr>
<td></td>
<td>字符串          </td>
<td>字符串本体</td>
</tr>
</tbody>
</table>


<table>
<thead>
<tr>
<th></th>
<th>字段名                                   </th>
<th>类型         </th>
<th>含义                                    </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> THEME_IDENTIFIER                          </td>
<td>字符串</td>
<td>主题的标示符，需要保证全世界唯一。没有自己域名的童鞋建议用net.lilybbs.&lt;自己的id>.&lt;主题名字>这样的格式</td>
</tr>
<tr>
<td></td>
<td> THEME_DISPLAY_NAME                       </td>
<td>字符串</td>
<td>主题的显示名字，这个会显示在客户端的“主题”功能内</td>
</tr>
<tr>
<td></td>
<td> THEME_AUTHOR_NAME                        </td>
<td>字符串</td>
<td>作者名字</td>
</tr>
<tr>
<td></td>
<td> THEME_AUTHOR_DATE                        </td>
<td>字符串</td>
<td>主题制作日期</td>
</tr>
<tr>
<td></td>
<td> THEME_VERSION                             </td>
<td>字符串</td>
<td>主题版本</td>
</tr>
<tr>
<td></td>
<td> THEME_COMPATABILITY                       </td>
<td>字符串</td>
<td>主题兼容性字段（暂时不用）</td>
</tr>
<tr>
<td></td>
<td> NAVIGATION_BAR_TINT_COLOR               </td>
<td>颜色  </td>
<td>导航栏背景颜色</td>
</tr>
<tr>
<td></td>
<td> NAVIGATION_BAR_TEXT_COLOR               </td>
<td>颜色  </td>
<td>导航栏字体颜色</td>
</tr>
<tr>
<td></td>
<td> NAVIGATION_BAR_BACKGROUND_COLOR         </td>
<td>颜色  </td>
<td>主题栏背景颜色（一般和上面一个背景颜色设置成一样）</td>
</tr>
<tr>
<td></td>
<td> NAVIGATION_BAR_BACKGROUND_IMAGE         </td>
<td>图片  </td>
<td>导航栏背景图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_SELECTED_TINT_COLOR            </td>
<td>颜色  </td>
<td>底栏选中时图标的颜色</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_TINT_COLOR                      </td>
<td>颜色  </td>
<td>同上</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_SELECTED_TEXT_COLOR            </td>
<td>颜色  </td>
<td>底栏文字选中时的颜色</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_UNSELECTED_TEXT_COLOR          </td>
<td>颜色  </td>
<td>底栏文字未选中时的颜色</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_BACKGROUND_IMAGE                </td>
<td>图片  </td>
<td>底栏背景图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_BACKGROUND_COLOR                </td>
<td>颜色  </td>
<td>底栏背景颜色</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_ICONS_TOPTEN_SELECTED_IMAGE   </td>
<td>图片  </td>
<td>底栏“全站十大”选中时的图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_ICONS_TOPTEN_IMAGE             </td>
<td>图片  </td>
<td>底栏“全站十大”未选中时的图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_ICONS_FAVORITES_SELECTED_IMAGE</td>
<td>图片  </td>
<td>底栏“我的收藏”选中时的图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_ICONS_FAVORITES_IMAGE          </td>
<td>图片  </td>
<td>底栏“我的收藏”未选中时的图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_ICONS_BROWSE_SELECTED_IMAGE   </td>
<td>图片  </td>
<td>底栏“浏览功能”选中时的图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_ICONS_BROWSE_IMAGE             </td>
<td>图片  </td>
<td>底栏“浏览功能”未选中时的图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_ICONS_PERSONAL_SELECTED_IMAGE </td>
<td>图片  </td>
<td>底栏“个人中心”选中时的图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_ICONS_PERSONAL_IMAGE           </td>
<td>图片  </td>
<td>底栏“个人中心”未选中时的图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_ICONS_SETTINGS_SELECTED_IMAGE </td>
<td>图片  </td>
<td>底栏“设置”选中时的图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_ICONS_SETTINGS_IMAGE           </td>
<td>图片  </td>
<td>底栏“设置”未选中时的图片</td>
</tr>
<tr>
<td></td>
<td> TAB_BAR_ICONS_DISPLAY_ORIGINAL         </td>
<td>布尔型</td>
<td>是否按原样显示底栏上的图片（若为 false 则 iOS 默认会自动添加灰色的遮罩到图片上）</td>
</tr>
<tr>
<td></td>
<td> TABLE_CELL_CACHE_STATUS_COLOR          </td>
<td>颜色  </td>
<td>帖子的未读提示颜色</td>
</tr>
<tr>
<td></td>
<td> NOT_IMPL_TABLE_CELL_TITLE_COLOR       </td>
<td>颜色  </td>
<td>尚未实现</td>
</tr>
<tr>
<td></td>
<td> NOT_IMPL_TABLE_CELL_AUTHOR_COLOR      </td>
<td>颜色  </td>
<td>尚未实现</td>
</tr>
<tr>
<td></td>
<td> NOT_IMPL_TABLE_CELL_BOARD_COLOR       </td>
<td>颜色  </td>
<td>尚未实现</td>
</tr>
<tr>
<td></td>
<td> NOT_IMPL_TABLE_CELL_VIEWED_COLOR      </td>
<td>颜色  </td>
<td>尚未实现</td>
</tr>
<tr>
<td></td>
<td> NOT_IMPL_TABLE_BACKGROUND_COLOR        </td>
<td>颜色  </td>
<td>尚未实现</td>
</tr>
<tr>
<td></td>
<td> NOT_IMPL_TABLE_BACKGROUND_IMAGE        </td>
<td>图片  </td>
<td>尚未实现</td>
</tr>
<tr>
<td></td>
<td> READER_HEADER_COLOR                      </td>
<td>颜色  </td>
<td>阅读时头部版面背景色</td>
</tr>
<tr>
<td></td>
<td> READER_HEADER_TEXT_COLOR                </td>
<td>颜色  </td>
<td>阅读时头部版面字体颜色</td>
</tr>
<tr>
<td></td>
<td> STATUS_BAR_STYLE                         </td>
<td>字符串</td>
<td>此处需配置为“STATUS_BAR_STYLE_LIGHT_CONTENT” 或 STATUS_BAR_STYLE_DARK_CONTENT，即状态栏文字为白色或黑色</td>
</tr>
</tbody>
</table>


<h3>3. 调试</h3>

<p>使用文件传输工具（OS X 平台可使用 iExplorer，Windows 平台可使用 iFunbox）将主题文件夹传输至小百合 App 的 &ldquo;Documents\Skins&rdquo; 目录，打开 App 内的“个人中心\主题”即可看到新的主题。</p>

<p><img src="http://zongxuan.us/images/post/2014-07-19-how-to-make-theme-for-lilybbs-ios-client/2.png" alt="" /></p>

<p>目前，主题内配置的颜色可实时生效，底栏的图片需要重启 App 生效。</p>

<p>就是这么简单~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装Autocad 2014 for Mac 后系统变卡的解决方法]]></title>
    <link href="http://zongxuan.us/blog/2013/12/16/autocad-2014-mac-makes-system-laggy/"/>
    <updated>2013-12-16T16:31:51+08:00</updated>
    <id>http://zongxuan.us/blog/2013/12/16/autocad-2014-mac-makes-system-laggy</id>
    <content type="html"><![CDATA[<p>工作原因需要用到 Autocad，而 Retina Macbook Pro 用 Bootcamp 装 Windows 的惨况想必大家也都清楚，因此只好安装 OS X 版。</p>

<p>安装过程一切顺利，Autocad 在 Retina Macbook Pro 上运行得也很流畅，直到一会儿之后。。。</p>

<p>在一次重启之后，系统莫名其妙地变卡了！</p>

<p>难以用言语描述这种卡顿，简单来说差不多像这样子：</p>

<ol>
<li>来回切换桌面空间时会发现画面出现卡顿，同时 Dock 附近出现画面撕裂。</li>
<li>屏幕顶端菜单栏右侧不断闪动。</li>
</ol>


<p>一开始以为是 Bartender 或者 Window Tidy 的问题，但在卸载并重启后故障依旧。</p>

<p>这一定是体制问题。。。</p>

<p>折腾了一个小时后，开始回想最近的安装历史，突然想到了刚安装的 Autocad！</p>

<p>然后又经过一个小时的折腾，成功定位了故障。</p>

<p>原来，只要在退出 Autocad 前在 Preference 里面把下图所示的选项取消即可。</p>

<p><img src="http://zongxuan.us/images/post/2013-12-16-autocad-2014-mac-makes-system-laggy/preference.png" alt="" /></p>

<p>看起来似乎是 Autocad 的 bug，最令人恼火的是 每次打开 Autocad 时这个选项都会默认被选中，实在是令人发指。</p>

<p>不管怎么说，这个莫名其妙的 bug 就这么莫名其妙地被解决了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何在你的 iPhone 上安装 iOS7]]></title>
    <link href="http://zongxuan.us/blog/2013/06/14/how-to-upgrade-to-ios7-beta/"/>
    <updated>2013-06-14T18:19:00+08:00</updated>
    <id>http://zongxuan.us/blog/2013/06/14/how-to-upgrade-to-ios7-beta</id>
    <content type="html"><![CDATA[<p>首先，直接从 iOS6 升级是无需重新激活的，测试版 iOS 仅会在激活时验证开发者身份。而从 iOS6 “升级”到 iOS7 是无需重新激活的，也就意味着并不需要开发者身份即可使用。</p>

<p>但非开发者使用 iOS7 是违反苹果的条款的，这点苹果说得很清楚。</p>

<blockquote><p>This is an Apple Confidential pre-release seed.  Your use is subject to and licensed only under the terms and conditions of the iOS Developer Program License Agreement (&ldquo;iOS PLA&rdquo;), including any applicable consent to collect diagnostic data set forth therein. If you have not agreed to the iOS PLA, you are not permitted to use this software.”</p></blockquote>

<p>这也意味着去淘宝买 UDID 开发者认证本身是违反条款的，苹果可以随时中止相关开发者账号，所以不用浪费钱了。</p>

<p>综上所述，以下内容是给开发者计划中的开发者们准备的。</p>

<p>首先要纠正一个概念，目前刷 iOS7 还不能叫“升级”，因为升级往往代表更好的表现，而iOS7目前还没有达到这个程度，bug比较多，比较卡顿，电池表现也非常烂。因此只建议开发机安装，不建议日常使用。</p>

<p>如果你觉得这些后果 OK，想体验一下的话，只需如下步骤：</p>

<ol>
<li><p>确认机器处于非越狱的 iOS6 状态，如果越狱了，先下个 iOS6 的最新固件恢复一下（即使没越狱也建议下一份，因为大多数人很快就会刷回来的）</p></li>
<li><p>用 iTunes 备份手机，并把 iTunes 的备份文件夹本身备份一遍，因为如果刷了 iOS7，备份就会被更新而无法用于 iOS6 了，如果没有老的备份的备份，就等着哭吧。。。</p></li>
</ol>


<p>Windows 的 iTunes 备份文件夹位于</p>

<pre><code>C:\Users\(用户名)\AppData\Roaming\Apple Computer\MobileSync\Backup\
</code></pre>

<p>OS X 的 iTunes 备份文件夹位于</p>

<pre><code>~/Library/Application Support/MobileSync/Backup
</code></pre>

<p>如果只想备份这个 iPhone 的，那么备份该文件夹下这个 iPhone 的 UDID 对应的那个文件夹即可，比如我的是：</p>

<pre><code>~/Library/Application Support/MobileSync/Backup/591*************************653
</code></pre>

<ol>
<li>下载对应机型的 iOS7 固件，然后在iTunes里面进入iPhone的页面</li>
</ol>


<p>Windows 的话按住 shift 然后点更新，</p>

<p>OS X 是 option 点更新</p>

<p>选择 iOS7 的 ipsw，然后开刷，然后就是 iOS7 了。</p>

<br />


<p>＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝=＝＝＝我是邪恶的分割线😈＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝=</p>

<br />


<p>ooxx 体验完之后，估计起码半数的人会想刷回来。刷回来的过程也是很简单的。</p>

<ol>
<li><p>先确认你备份好了原先 iOS6 的备份，如果没有，请先准备好哭吧。</p></li>
<li><p>选择你刚才已经下好的 iOS6 固件，按照刚才的 shift/option + 更新大法，选择 iOS6 的固件。</p></li>
<li><p>如果一切正常就会顺利回到 iOS6 了，关 iTunes。</p></li>
<li><p>去 iTunes 备份文件夹把备份删了，把之前备份好的 iOS6 时候的备份拷进去。</p></li>
<li><p>开 iTunes，然后从备份恢复手机。</p></li>
<li><p>好了，折腾完毕，又回到了之前的状态。</p></li>
</ol>


<p>Tips：</p>

<ol>
<li><p>刷的过程中遭遇任何 3194，16XX 错误的，请检查 hosts 文件，把有关 apple.com 的行数统统干掉，重启，台式机的话换机箱后面的口，笔记本换个确认接触比较好的口。要是还刷不成就别刷了，没缘分，省得刷来刷去刷出错误-1，到时候哭都来不及。</p></li>
<li><p>如果只是想刷一下 iOS7，把玩一下然后吐槽，“靠，这卡货/丑货”，然后刷回来的，那其实不用刷，因为有很多人帮你吐槽过了，玩微博的这个界面也见得多了，不差你一个。</p></li>
<li><p>iPhone5 刷了之后流畅度表现尚可，iPhone4S 在程序开多了的情况下会比较卡顿，至于 iPhone4 的表现，个人不抱期望。所有机器都会遭遇比较严重的耗电和发热问题。</p></li>
<li><p>没图是因为个人感觉已经说得够明白了，对于 iTunes 比较熟悉的人不会在乎有没有图。这个不是手把手的教程，只能算是个让比较熟悉的人少绕弯路的介绍。想看手把手教程的，前面左拐是 Weiphone。</p></li>
<li><p>对于抱着调试程序目的，也不是很建议刷，我个人的感觉现在 UIKit bug 比较多，等稳定了再调试也来得及，按照以往的尿性 beta3 之后会比较靠谱。况且兼容 iOS7 也不是直接用 iOS7 SDK 编译一下就能解决的，这回 iOS7 的更新还会带来交互、贴图等等更大的问题。</p></li>
</ol>


<p><strong>总的来说就是现在没什么好刷的，除非你热爱穷折腾。</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何在 OS X 中防止终端用户名被 NetBIOS 名称覆盖]]></title>
    <link href="http://zongxuan.us/blog/2013/05/09/how-to-override-hostname-provided-by-netbios-in-os-x/"/>
    <updated>2013-05-09T12:59:00+08:00</updated>
    <id>http://zongxuan.us/blog/2013/05/09/how-to-override-hostname-provided-by-netbios-in-os-x</id>
    <content type="html"><![CDATA[<p>有段时间没在学校了，昨天回来发现终端里的用户名变成了 IP。</p>

<p><img src="http://zongxuan.us/images/post/2013-05-09-how-to-override-hostname-provided-by-netbios-in-os-x/1.png" alt="" /></p>

<p>Google了一下之后发现其实原因很简单，在这里：</p>

<p><img src="http://zongxuan.us/images/post/2013-05-09-how-to-override-hostname-provided-by-netbios-in-os-x/2.png" alt="" /></p>

<p>因为学校修改了 DHCP 服务器的配置，因此会给每个设备分配一个 NetBIOS 名称，而在 OS X 里面呢，终端会优先显示 NetBIOS 名称。</p>

<p>解决方法很简单，在终端中执行：</p>

<pre><code>sudo scutil --set HostName "你喜欢的名字"
</code></pre>

<p>如下图</p>

<p><img src="http://zongxuan.us/images/post/2013-05-09-how-to-override-hostname-provided-by-netbios-in-os-x/3.png" alt="" /></p>

<p>要把名字改回来也很简单，执行</p>

<pre><code>sudo scutil --set HostName ""
</code></pre>

<p>即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为 OS X + Sublime Text 优化后的 NJUThesis 模板]]></title>
    <link href="http://zongxuan.us/blog/2013/04/13/refined-njuthesis-latex-template/"/>
    <updated>2013-04-13T22:31:00+08:00</updated>
    <id>http://zongxuan.us/blog/2013/04/13/refined-njuthesis-latex-template</id>
    <content type="html"><![CDATA[<p>原版权归属于</p>

<p><a href="http://code.google.com/p/njuthesis/">http://code.google.com/p/njuthesis/</a></p>

<p>我做了一些改动，使之更适合在 OS X 下编译。（理论上 Linux 也适用）</p>

<p>优化后的版本请：</p>

<pre><code>git clone https://github.com/fireblue/NJUThesis
</code></pre>

<h3>make.sh 文件作用：</h3>

<ol>
<li>关闭当前打开的编译过的文档窗口。（仅对系统的“预览”有效）</li>
<li>清空之前的临时文件。</li>
<li>编译。</li>
<li>自动打开编译完成的pdf文件。</li>
</ol>


<p>需要编译新版本时，直接编译即可。</p>

<p>系统会找到开着编译后 pdf 文件的窗口并且把它关掉。</p>

<p>编译完成后打开。</p>

<h3>tex.sublime-build 文件作用：</h3>

<p>将文件拷贝至 ~/Library/Application Support/Sublime Text 2/ 目录下，即可在 Sublime Text 的 &ldquo;Tools&rdquo; => &ldquo;Build Systems&rdquo; 菜单下看到 tex。</p>

<p>因此操作就变成：</p>

<ol>
<li>写文章。</li>
<li>⌘ + B 即可编译。</li>
</ol>


<h3>Have Fun~</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[对 UIWebView 进行截图的方法]]></title>
    <link href="http://zongxuan.us/blog/2013/03/20/creating-a-snapshot-of-uiwebview/"/>
    <updated>2013-03-20T21:50:00+08:00</updated>
    <id>http://zongxuan.us/blog/2013/03/20/creating-a-snapshot-of-uiwebview</id>
    <content type="html"><![CDATA[<p>最新版的小百合 iOS 客户端中加入了图文混排的新浪微博分享。</p>

<p>这个功能实现的原理很简单，其实就是对 UIWebView 进行了一次截图，然后保存并分享。</p>

<p>我的这段代码可以对 UIWebView 截图，并且<strong>到某个特定的html标签时停止。</strong></p>

<p><strong>需要吐槽的是，任何涉及到网页的东西有的时候都需要一定的hack，UIWebView也不例外。</strong></p>

<p>因此，这个功能看起来很简单，其实花了不少时间，现在把代码贴出来，让大家都少走些弯路吧。</p>

<p><strong>使用的时候，一定要注意网页的 viewport，切记！</strong></p>

<p><strong>同时需要注意的是内存，这种方式内存消耗比较大</strong></p>

<div><script src='https://gist.github.com/5027217.js'></script>
<noscript><pre><code>-(UIImage *)screenShot
{
    CGRect originalFrame = self.frame;
    CGPoint originalOffset = self.scrollView.contentOffset;
    CGSize entireSize = [self sizeThatFits:CGSizeZero];
    [self setFrame: CGRectMake(0, 0, entireSize.width, entireSize.height)];
    
    CGRect rect = [self positionOfElementWithId:@&quot;post1&quot;];
    //如果没有找到这个元素，就取整个页面
    if (rect.origin.y != 0) {
        entireSize.height = rect.origin.y;
    }
    entireSize.height += 40;
    
    //第三个参数为0就是取系统默认的scale，支持retina。网上带if的只是兼容3.X以下的系统。
    UIGraphicsBeginImageContextWithOptions(entireSize, NO, 0);
    
    CGContextRef context = UIGraphicsGetCurrentContext();
    [self.layer renderInContext:context];
    
    //多出来的部分画个白色背景色以放置我们尾部的文字
    CGContextSetRGBStrokeColor(context, 1.0, 1.0, 1.0, 1.0);
    CGContextSetRGBFillColor(context, 1.0, 1.0, 1.0, 1.0);
    CGContextFillRect(context, CGRectMake(0, entireSize.height-30, entireSize.width, 30));
    
    CGContextSetRGBStrokeColor(context, 0.0, 0.0, 0.0, 1.0);
    CGContextSetRGBFillColor(context, 0.0, 0.0, 0.0, 1.0);
    NSString *contentString = @“这里是你需要加上的文字
    UIFont *font = [UIFont systemFontOfSize:12];
    [contentString drawInRect:CGRectMake(12, entireSize.height-27, entireSize.width, 25) withFont:font lineBreakMode:UILineBreakModeWordWrap];
    
    UIImage *screenshot = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    [self setFrame:originalFrame];
    self.scrollView.contentOffset = originalOffset;
    return screenshot;
}

- (CGRect)positionOfElementWithId:(NSString *)elementID {
    NSString *js = @&quot;function f(){ var r = document.getElementById(&#39;%@&#39;).getBoundingClientRect(); return &#39;{{&#39;+r.left+&#39;,&#39;+r.top+&#39;},{&#39;+r.width+&#39;,&#39;+r.height+&#39;}}&#39;; } f();&quot;;
    NSString *result = [self stringByEvaluatingJavaScriptFromString:[NSString stringWithFormat:js, elementID]];
    CGRect rect = CGRectFromString(result);
    return rect;
}
</code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS X升级后登录界面变为英文的解决办法]]></title>
    <link href="http://zongxuan.us/blog/2013/03/17/revert-login-screen-to-chinese-after-update/"/>
    <updated>2013-03-17T23:40:00+08:00</updated>
    <id>http://zongxuan.us/blog/2013/03/17/revert-login-screen-to-chinese-after-update</id>
    <content type="html"><![CDATA[<p>在更新了10.8.3正式版之后，我的登录界面出现了一些小问题。</p>

<p>底下三大天王变成了 Sleep，Restart 和 Shutdown。</p>

<p>就连输入密码的占位符都变成了 Password。</p>

<p>总而言之，整个界面变成了英文。</p>

<p>但是登录进系统后，确是正常的中文。</p>

<p>这种情况的解决方案很简单。</p>

<p>打开“应用程序”=>“实用工具”=>“终端”</p>

<p>然后输入这个命令：</p>

<blockquote><p>sudo languagesetup</p></blockquote>

<p>输入用户密码后，出现语言列表。</p>

<p>在我这里中文是 17，因此输入 17，并回车。</p>

<p>不用重启，问题解决。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fork了一下iConsole]]></title>
    <link href="http://zongxuan.us/blog/2013/01/05/my-fork-of-iconsole/"/>
    <updated>2013-01-05T15:42:00+08:00</updated>
    <id>http://zongxuan.us/blog/2013/01/05/my-fork-of-iconsole</id>
    <content type="html"><![CDATA[<p>新年伊始，很快无所不能的大家就发现了新版微信（4.3.3）内置了一个控制台，不仅可以显示一些信息，还可以让用户在里面执行一些简单的debug命令。</p>

<p>其实很简单，在控制台顶上就可以看到，微信使用的是iConsole。</p>

<p>简单Google了一下就在Github上找到了这个项目的主页：</p>

<p><a href="https://github.com/nicklockwood/iConsole">https://github.com/nicklockwood/iConsole</a></p>

<p>在最新的RabbitHole里试了一下，还不错，只是有一个bug：</p>

<p><strong>只要在包含UIScrollView的视图里唤出Console，这个UIScrollView表现就会不正常。</strong></p>

<p>这是因为iConsoleWindow中用了如下两个函数来捕获和响应三指上滑和下滑的操作：</p>

<blockquote><p>- (void)motionEnded:(UIEventSubtype)motion withEvent:(UIEvent *)event</p>

<p>- (void)sendEvent:(UIEvent *)event</p></blockquote>

<p>于是fork了一下，用两个UIGestureRecognizer代替了原先的这俩函数。试验了一下完全ok，完事儿~~</p>

<p>enjoy~</p>

<p>对了，忘了贴我的fork的地址：</p>

<p><a href="https://github.com/fireblue/iConsole">https://github.com/fireblue/iConsole</a></p>

<p>Happy Coding :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个可以匹配url的正则表达式]]></title>
    <link href="http://zongxuan.us/blog/2012/12/19/one-regex-expression-for-urls/"/>
    <updated>2012-12-19T15:27:00+08:00</updated>
    <id>http://zongxuan.us/blog/2012/12/19/one-regex-expression-for-urls</id>
    <content type="html"><![CDATA[<p>目前我能想到和找到的能够最完美匹配url的正则表达式。</p>

<p>好东西要共享。</p>

<blockquote><p>(((http|ftp|https)://)(([a-zA-Z0-9&#46;<em>&ndash;]+&#46;[a-zA-Z]{2,6})|([0-9]{1,3}&#46;[0-9]{1,3}&#46;[0-9]{1,3}&#46;[0-9]{1,3}))(:[0-9]{1,4})*(/[a-zA-Z0-9\&amp;%</em>&#46;/&ndash;~&ndash;]*)?)</p></blockquote>

<p>enjoy~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于Git submodule的一些操作]]></title>
    <link href="http://zongxuan.us/blog/2012/12/15/something-about-git-submodule/"/>
    <updated>2012-12-15T23:18:00+08:00</updated>
    <id>http://zongxuan.us/blog/2012/12/15/something-about-git-submodule</id>
    <content type="html"><![CDATA[<p>submodule是git的一个很方便的功能，对于像笔者这样的更新强迫症患者绝对是个福音。将Github上的项目作为submodule添加到自己的项目中后，能够很方便地进行更新。</p>

<p>本文是我在git submodule使用过程中积累下的几个简单用法，放在这儿留档的同时分享给大伙儿看一下~</p>

<ol>
<li>添加submodule</li>
</ol>


<p>很简单，一句命令即可</p>

<blockquote><p>git submodule add git://yourhost/repo.git Externals/repo</p></blockquote>

<ol>
<li>删除submodule</li>
</ol>


<p>相对于添加略微烦一点，按照如下步骤即可：</p>

<p>先在git中删掉这个submodule</p>

<blockquote><p>git rm &mdash;cached Externals/repo</p>

<p>rm -rf Externals/repo</p></blockquote>

<p>接着修改.gitmodules，删掉当中对应于这个submodule的部分</p>

<blockquote><p>vim .gitmodules</p></blockquote>

<p>接着修改.git/config</p>

<blockquote><p>vim .git/config</p></blockquote>

<p>修改完成之后理论上submodule就从当前的工作目录消失了，于是commit一下</p>

<blockquote><p>git add .gitmodules</p>

<p>git commit -m &ldquo;Farewell my submodule&rdquo;</p></blockquote>

<p>还不放心就同步一下</p>

<blockquote><p>git submodule sync</p></blockquote>

<ol>
<li>更新submodule</li>
</ol>


<p>很简单，先cd到需要更新的submodule</p>

<blockquote><p>cd Externals/repo</p></blockquote>

<p>然后pull一下</p>

<blockquote><p>git pull origin master</p></blockquote>

<p>完事</p>

<p>当然，一般而言一个项目是绝对不可能只用到一个submodule的，下面这个命令可以事半功倍：</p>

<blockquote><p>git submodule foreach git pull origin master</p></blockquote>

<p>当然还有很多其它的办法，欢迎分享~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[那些年，我们一起玩过的手机游戏]]></title>
    <link href="http://zongxuan.us/blog/2012/09/15/the-phone-games-that-we-once-played/"/>
    <updated>2012-09-15T23:18:00+08:00</updated>
    <id>http://zongxuan.us/blog/2012/09/15/the-phone-games-that-we-once-played</id>
    <content type="html"><![CDATA[<h3>Part 1</h3>

<p>相对而言，我接触手机是比较晚的，06年上大学时候才拥有了自己的第一部手机——Sony Ericsson K750c。</p>

<p>这部机器在当时带给我的震撼和乐趣至今仍然难以有机器企及：</p>

<ol>
<li><p>相当强大的Java性能。这让我玩到了当时几乎所有的流行手机游戏，直到08年才慢慢显出老态。</p></li>
<li><p>由于固件已经得到了相当充分的研究，因此这部机器打过补丁后相当逆天。试着想一下15秒曝光时间的照片吧。。。即使是现在的iPhone、Android，这也是一个不可能完成的任务。</p></li>
<li><p>能和W800固件互刷，于是2k5的ds机瞬间变成了当时3k5+的高帅富机器。其实我这部K750的固件从买到手到最后在大桥南路被偷基本上用的都是W800的固件。。。</p></li>
</ol>


<p>总之，这部机器在还不许带电脑的大一给我带来了无穷的乐趣。</p>

<p>现在每天会关注下相关的网站、论坛看看有没有新出的App，新的玩法。</p>

<p>当时却是在it168的sebbs找有没有新出的好玩的补丁，然后刷，然后可能bug，然后就重刷，然后再重刷各种补丁，乐此不疲。</p>

<p>最后，这部机器在2008年3月1日于大桥南路被偷。直到现在才发现从那时起就告别了SE，不知以后有没有机会重逢。</p>

<h3>Part 2</h3>

<p>第一部手机被偷之后心情是相当郁闷的，用现在的话讲就是“好累，感觉不会再爱了”。</p>

<p>于是第二部机器果断地花了1K5买了07年的中低端Symbian——一代神机6120c，并且心里暗暗有个心愿以后再也不买贵的手机了，直到最后这个心愿被iPhone打破。</p>

<p>相对于同期的中高端机器，我实在是难以理解诺基亚的布局。</p>

<p>当时N73还是处于中高端机器的价位，而N95则稳稳地属于高端机。</p>

<p>但是N73用了220MHz的处理器，整个机器的表现可以用龟速形容。</p>

<p>N95处理器比较好，带3D加速和AAC硬件解码，但是频率也就300出头。（似乎不同的固件会有不同的频率？没用过，不清楚）</p>

<p>但是6120却用了369MHz的处理器。。。（不带3D加速和AAC硬件解码）</p>

<p>最后导致的结果是6120在大部分的应用中反应速度完爆N73。。。</p>

<p><strong>诺基亚啊诺基亚，你今天的惨状其实早就有预兆了。。。产品线的混乱！</strong></p>

<p>这机器也是让我玩到了不少东西。</p>

<p>1、破解系统的权限，用RomPatcher打各种补丁。</p>

<p>2、到后期甚至能够通过补丁和系统文件实现一些S60V3 FP2的功能，比如主题特效。</p>

<p>3、各种S60上的软件、游戏（包括后来的N-GAGE）。</p>

<p><strong>其实从某种程度上看来，诺基亚比苹果还封闭。</strong></p>

<p>一部机器如果出厂是S60V3 FP1，那你是永远也别指望能升级成S60V3 FP2乃至FP3的，而且，用现在的视角看起来，还是锁bootloader的！</p>

<p>相比之下，水果至少有3个官方升级。Android更不用说了，官方没有民间也能有。</p>

<p>在被我折腾了两年、返厂一次、换外壳一次之后，6120光荣退休，目前作为我家人的备用机使用。诺基亚耐操的品质可见一斑。而且比起N95这类机器，诺基亚是越低端的机器越耐操，N95还会碎屏。。。。</p>

<p><strong>又是两个诺基亚衰败的预兆啊！</strong></p>

<h3>Part 3</h3>

<p>在6120退休之后陆续还用过HTC Dream，Magic，三星Galaxy S Vibrant，Moto Milestone XT720，三星Nexus S，HTC Desire S，折腾着刷固件，装各种桌面Widget，各种软件。</p>

<p>可惜年岁增长，刷机器的热情以指数级别降低。一直延续到现在买机器首选是Google亲儿子，直接刷个官方固件，root下了事。。。</p>

<p>非官方Rom一天一个新版，伤不起。所以至多也就是刷个Miui，CM之类的。。。</p>

<p>Android曾经给过我惊艳，从G1的Android 1.0，到后来带中文输入的1.5，再后来G2的Sense桌面，Galaxy S上手的极度流畅，惊艳的屏幕以及XT720毛都不能玩的蛋疼（锁BL）。到现在Galaxy S3的不算很成功的逆袭。。。</p>

<p>然后我疲软了，已经只想找部安安顿顿的机器了。</p>

<p><strong>Moto，znm的这么多年过去了你丫还是没有醒悟，活该被收购。。。</strong></p>

<h3>Part 4</h3>

<p>其实我接触iPhone的时间也比较短，拥有的第一部iPhone是3GS。</p>

<p>当时最大的感想就是，一样的配置，为啥这Android这货就能卡比成这个样子呢。。。</p>

<p>比如，在128MB内存的touch 2上，是能流畅地玩愤怒的小鸟的。。。</p>

<p>而且，iPhone上的App着实把我的审美观好好地扭转了，造成的影响一直延续至今。</p>

<p><strike>不然我现在写的东西就是最炫Android风了。。。</strike></p>

<p>现在在用iPhone 4S，我觉得我会用到它报废。如果没有报废就换，那么肯定是换了新款iPhone。</p>

<h3>Part 5</h3>

<p>好吧，上面两个Part比较短的原因是因为我打字打累了。</p>

<h3>Part 6</h3>

<p>其实写到这里，已经是严重偏题了，手机游戏=>玩机历程。</p>

<p>我想怀念的只有一部机器——K750，因为在它上面我玩到了我至今念念不忘的几款游戏：</p>

<ol>
<li>Deep</li>
<li>V-Rally</li>
<li>4×4 Extreme Rally</li>
</ol>


<p>如果当时有App Store，我肯定会把这三个游戏的正版都买一遍。</p>

<p>为什么会怀念呢？因为我最近在玩Galaxy On Fire 2 HD，Fishlabs家的。</p>

<p>每次看到熟悉的Abyss引擎标志就会不由自主地想起K750。</p>

<p>其实这个游戏我早先在原价时候就买了。。。最近在冰点，于是又拿出来重玩了一遍，再额外花了3刀买了扩展包。</p>

<p>小做修改，把金钱改到了99,999,999，玩得相当爽。</p>

<p>等这段时间忙过了，一定要用最高难度不作任何修改玩一遍。</p>

<p>嗯。</p>

<p>懒得继续打字了，就这样吧。</p>

<h3>尾声</h3>

<p>最后还是祝我和妹子，本级的所有同学都能找到满意的工作。</p>

<p>目前面试被拒得太惨了，都感觉不会再爱了，不说也罢。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[百合iPhone客户端1.8版发布]]></title>
    <link href="http://zongxuan.us/blog/2012/08/03/lilybbs-for-iphone-v1-dot-8-is-out/"/>
    <updated>2012-08-03T20:30:00+08:00</updated>
    <id>http://zongxuan.us/blog/2012/08/03/lilybbs-for-iphone-v1-dot-8-is-out</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>最近学期末，很是忙碌，因此也没有空来更新程序。</p>

<p>这两天稍微空了一点，于是继续爬了会儿代码，这不，算是捣鼓出了一个新的版本。</p>

<p>changelog和下载地址请见 <a href="http://zongxuan.us/lily">http://zongxuan.us/lily</a></p>

<p>这个版本最主要的改进是加入了推送的支持。</p>

<h2>关于推送</h2>

<p>目前暂时只推送十大。肯定有很多朋友要说为什么不能做个站内信神马的推送，对不起，这个我实在也是无能为力，原因请看百合站规：</p>

<blockquote><p>对于有严重危害本站的行为（如使用上站机，使用灌水机、自动发文机等一切非手工发文工具或快捷键）的账号，本站有权直接删除。技术站务调试系统除外，但个人不得从中获利。</p></blockquote>

<p>推送是什么原理呢？</p>

<p>很简单，如果加入了站内信的推送，那么就相当于是我的服务器(这个也是个大问题)一直帮你把百合id挂着，同时每隔一段时间检测有没有新的站内信，如果有新的站内信，那么就通知水果的服务器，给你发个推送。</p>

<p>因此，这个服务器是个典型的挂站机。</p>

<p>而且，百合的登录(不要写成登陆哦 :))是无法保持的，如果你登录了一个新的session，那么老的session就会被杀掉。太棒了，如果你由于某些原因导致在其他客户端(Web、Term、App)不停地登录，那你一天100次的登录次数很快就没有了哦。</p>

<p>与此同时还有一个问题，我暂时还没有如此强大的服务器。</p>

<p>可以计算一下，如果当前有1k用户，每个用户一小时刷新一下站内信，那么也就是平均每(3600/1000=3.6)秒我的服务器就要刷一下百合的页面，而且是持续访问，<del>技站们会来干掉我的。。。</del></p>

<p><strong>总之，一句话，在我可见的将来，是不会也不可能有站内信推送的。</strong></p>

<h2>后续发展</h2>

<p>由于1.X的代码已经沿用了相当一段时间，有时候为了第一时间加入最新的功能，代码就写得不是很漂亮，而且很多最新的技术也没有用到，甚至于影响到了后续功能的开发。因此在最近一段时间我会开始进行2.0版的项目。</p>

<p>2.0版的开发将会效仿Chrome，分三个版本发布：</p>

<ol>
<li>功能最新bug最多的rabbit版(哈哈，jump into the rabbit hole :))</li>
<li>比rabbit版更稳定，但是新功能略少的dev版。</li>
<li>经过了dev版后的正式版，这个版本提交App Store。</li>
</ol>


<p>同时，在1.X版时我对于App Store上的版本号理解也有些偏差，因此2.0以后版本号会重新定义。大致是这个样子的：</p>

<table>
   <tr align="center">
      <td>&nbsp;&nbsp;大版本&nbsp;&nbsp;</td>
      <td>&nbsp;&nbsp;小版本&nbsp;&nbsp;</td>
      <td>&nbsp;&nbsp;Build&nbsp;&nbsp;</td>
   </tr>
   <tr align="center">
      <td>2&nbsp</td>
      <td>0</td>
      <td>(10)</td>
   </tr>
</table>




<br />


<p><strong>Build号说明当前版本的特性</strong></p>

<ol>
<li>末位为3n的说明是正式版，比如0, 3</li>
<li>末位为3n+1的是dev版，比如1, 4</li>
<li>末位为3n+2的是rabbit版，2, 5</li>
</ol>


<p>这样子应该会更清晰点 >o&lt;，不知各位意下如何。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[把博客迁移到了Octopress]]></title>
    <link href="http://zongxuan.us/blog/2012/07/30/migrated-my-blog-to-octopress/"/>
    <updated>2012-07-30T13:54:00+08:00</updated>
    <id>http://zongxuan.us/blog/2012/07/30/migrated-my-blog-to-octopress</id>
    <content type="html"><![CDATA[<p>Wordpress是个好东西，可是用着用着就会觉得这玩意太重量级了。</p>

<p>其实很多时候并不想去关注怎么去优化，怎么去配置。只想有个可以简简单单写写东西的地方就行了。</p>

<p>Octopress在本地生成静态页面，然后再部署到服务器，挺好。</p>

<p>在本地用Mou写markdown的感觉比Wordpress那个蛋疼的在线编辑器实在是好多了。</p>

<p>老博客里的文章陆续也会迁移进来，以后的新文章就写在Octopress上了。</p>
]]></content>
  </entry>
  
</feed>
